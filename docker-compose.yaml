services:
  postgresql:
    image: postgres:15
    container_name: candidate-tracker-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./candidate-tracker-db.sql:/docker-entrypoint-initdb.d/candidate-tracker-db.sql
      - ./csv_to_sql_generator/files/candidate-tracker-db/queries/inserts.sql:/data/inserts.sql
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend

  report-script:
    build: ./candidates_tracker
    container_name: candidate-tracker-report
    env_file:
      - .env
    volumes:
      - ./candidates_tracker/.:/app/
    depends_on:
      postgresql:
        condition: service_started
    networks:
      - backend

  csv-script:
    build: ./csv_to_sql_generator
    container_name: csv-to-sql-generator
    env_file:
      - .env
    volumes:
      - ./csv_to_sql_generator/.:/app/

  api:
    build: ./calculator
    container_name: calculator-api
    env_file:
      - .env
      - ./calculator/.env
    ports:
      - ${API_PORT}:8000

networks:
  backend:
    driver: bridge
